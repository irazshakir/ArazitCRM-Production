create type payment_type_enum as enum ('Received', 'Expenses', 'Payments', 'Refunds');
create type payment_mode_enum as enum ('Online', 'Cash', 'Cheque');
create type credit_debit_enum as enum ('credit', 'debit');

create table accounts (
  id bigint generated by default as identity primary key,
  payment_type payment_type_enum not null,
  payment_mode payment_mode_enum not null,
  amount decimal(12,2) not null check (amount >= 0),
  payment_date timestamp with time zone not null default now(),
  client_name varchar(255),
  payment_credit_debit credit_debit_enum not null,
  notes text,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- Create indexes for common query patterns
CREATE INDEX accounts_payment_date_idx ON accounts(payment_date);
CREATE INDEX accounts_payment_type_idx ON accounts(payment_type);
CREATE INDEX accounts_client_name_idx ON accounts(client_name);

-- Trigger to automatically update updated_at timestamp
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = now();
    RETURN NEW;
END;
$$ language 'plpgsql';

CREATE TRIGGER update_accounts_updated_at
    BEFORE UPDATE ON accounts
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column(); 