create table company_branches (
  id bigint generated by default as identity primary key,
  branch_name varchar(255) not null unique,
  branch_is_active boolean default true,
  created_at timestamp with time zone default now(),
  updated_at timestamp with time zone default now()
);

-- Create index for faster lookups
CREATE INDEX company_branches_name_idx ON company_branches(branch_name);
CREATE INDEX company_branches_status_idx ON company_branches(branch_is_active);

-- Trigger to automatically update updated_at timestamp
CREATE TRIGGER update_company_branches_updated_at
    BEFORE UPDATE ON company_branches
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- Now we need to add branch_id to existing tables
ALTER TABLE leads 
ADD COLUMN branch_id bigint references company_branches(id);

ALTER TABLE accounts 
ADD COLUMN branch_id bigint references company_branches(id);

ALTER TABLE users 
ADD COLUMN branch_id bigint references company_branches(id);

-- Create indexes for the new foreign keys
CREATE INDEX leads_branch_idx ON leads(branch_id);
CREATE INDEX accounts_branch_idx ON accounts(branch_id);
CREATE INDEX users_branch_idx ON users(branch_id);

-- Create composite indexes for common branch-based queries
CREATE INDEX leads_branch_status_idx ON leads(branch_id, lead_active_status);
CREATE INDEX accounts_branch_date_idx ON accounts(branch_id, payment_date);
CREATE INDEX users_branch_active_idx ON users(branch_id, user_is_active); 